#!/usr/bin/env python3
def solve(chapters: list) -> int:
    length = len(chapters)

    # summation[a] = sum(chapters[:a])
    summation = [0]*(length + 1)
    for i in range(1, length + 1):
        summation[i] = summation[i - 1] + chapters[i - 1]

    # cache[a][b] == solve(chapters[b:b + a])
    cache = [None] + [
        [0]*(length - width + 1)
        for width in range(1, length + 1)
    ]
    for width in range(2, length + 1):
        cache[width] = [
            summation[i + width] - summation[i] + min(
                cache[j][i] + cache[width-j][i+j]
                for j in range(1, width)
            )
            for i in range(length - width + 1)
        ]

    return cache[length][0]

for _ in range(int(input())):
    input()
    chapters = [int(x) for x in input().split()]
    # assert 3 <= len(chapters) <= 500
    # assert all(file <= 10000 for file in chapters)

    answer = solve(chapters)
    print(answer)
