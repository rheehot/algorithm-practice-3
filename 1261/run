#!/usr/bin/env python3
from sys import stdin
from heapq import heappush, heappop

WIDTH, HEIGHT = map(int, input().split())
WORLD = stdin.read().split() # `world[y][x]` 이렇게 접근해야함

#
# Dijkstra
#
def solve() -> int:
    COST = [[100000]*WIDTH for _ in range(HEIGHT)]
    COST[0][0] = 0

    priority_queue = [(0, (0, 0))]
    while True:
        cost, (x0, y0) = heappop(priority_queue)

        # 도착함
        if x0 == WIDTH - 1 and y0 == HEIGHT - 1:
            return COST[HEIGHT - 1][WIDTH - 1]

        # 인접한 점들 순회
        for x, y in [(x0, y0-1), (x0-1, y0), (x0+1, y0), (x0, y0+1)]:
            if not (0 <= x < WIDTH and 0 <= y < HEIGHT):
                continue

            new_cost = cost + (1 if WORLD[y][x] == '1' else 0)
            if COST[y][x] <= new_cost:
                continue

            COST[y][x] = new_cost
            heappush(priority_queue, (new_cost, (x, y)))

print(solve())
